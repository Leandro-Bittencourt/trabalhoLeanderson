pacote br.edu.univille.poo.jpa.controller;

importar br.edu.univille.poo.jpa.servico.TrabaServico;
importar org.springframework.beans.factory.annotation.Autowired;
importar org.springframework.http.HttpStatus;
importar org.springframework.http.ResponseEntity;
importar org.springframework.web.bind.annotation.*;

importar java.util.List;

@ControladorDeResto()
@RequestMapping("api/pessoa")
classe pública TrabaRestController {

    @Autowired
    privado TrabaServico pessoaServico;

    @ObterMapeamento
    public List<Traba> obterTodos(){
        return TrabaServico.obterTodos();
    }

    @GetMapping("/{id}")
    public ResponseEntity<Object> obterPeloId(@PathVariable Long id){
        var opt = pessoaServico.obterPeloId(id);
        retornar opt.map(pessoa -> new ResponseEntity<>(pessoa, HttpStatus.OK)).orElseGet(() -> new ResponseEntity<>(HttpStatus.NOT_FOUND));
    }

    @PostMapping
    public ResponseEntity<?> incluir(@RequestBody Traba pessoa){
        tentar {
            Traba = pessoaServico.incluir(Traba);
            retornar nova ResponseEntity<>(pessoa, HttpStatus.CREATED);
        }catch (Exceção e){
            retornar nova ResponseEntity<>(e.getMessage(),HttpStatus.BAD_REQUEST);
        }
    }

    @ColocarMapeamento
    public ResponseEntity<?> atualizar(@RequestBody Traba pessoa){
        tentar {
            Traba = pessoaServico.atualizar(Traba);
            retornar nova ResponseEntity<>(pessoa, HttpStatus.OK);
        }catch (Exceção e){
            retornar nova ResponseEntity<>(e.getMessage(),HttpStatus.BAD_REQUEST);
        }
    }

    @ExcluirMapeamento
    public ResponseEntity<?> excluir(@RequestBody Pessoa pessoa){
        exército{
            pessoaServico.excluir(pessoa);
            retornar nova ResponseEntity<>(HttpStatus.OK);
        }catch (Exceção e){
            retornar nova ResponseEntity<>(e.getMessage(),HttpStatus.BAD_REQUEST);
        }
    }


}
